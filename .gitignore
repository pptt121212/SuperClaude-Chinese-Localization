# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to exclude the package-lock.json from your project.
#  https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
.idea/

# Node.js
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# vue-nuxt generate
.output

# Vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

# Backup files
*.backup
*.bak
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# SuperClaude specific
backup/
*.backup.*
latest_backup.txt

# Temporary files
temp/
tmp/
*.tmp
*.temp

# Log files
*.log
logs/

# Cache files
.cache/
*.cache

# Local configuration
config.local.*
settings.local.*

# IDE files
.vscode/
.idea/
*.sublime-project
*.sublime-workspace

# Application specific
.superclaude-metadata.json.backup
claude-code-backup/
localization-backup/

# Test files
test_*.sh
*_test.*
tests/*.tmp

# Build artifacts
build/
dist/
out/

# Dependency directories (excluding project-specific)
vendor/
node_modules/

# Archive files
*.tar
*.tar.gz
*.tar.bz2
*.tar.xz
*.zip
*.rar
*.7z

# Certificate files
*.pem
*.key
*.crt
*.p12
*.pfx

# Database files
*.db
*.sqlite
*.sqlite3

# Compiled binaries
*.exe
*.dll
*.dylib
*.so
*.a
*.lib

# Object files
*.o
*.obj

# Static libraries
*.a
*.lib

# Shared libraries
*.dll
*.so
*.so.*
*.dylib

# Executables
*.exe
*.out
*.app

# Debug files
*.pdb
*.dSYM/
*.su
*.idb
*.pdb

# Profiling data
*.prof
*.pprof
*.profraw

# Coverage reports
coverage.xml
*.cover
.hpc

# Temporary deployment files
deploy/
staging/

# Cloud specific
.aws/
.azure/
.gcloud/
.firebase/

# Kubernetes specific
.kube/

# Docker specific
.dockerignore
docker-compose.override.yml

# Ansible specific
*.retry
inventory.ini

# Terraform specific
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Helm specific
charts/*.tgz
charts/*/requirements.lock
charts/*/values.yaml.gotmpl

# Package manager specific
Gemfile.lock
package-lock.json
yarn.lock
pnpm-lock.yaml
composer.lock
Podfile.lock
Cartfile.resolved
mix.lock
poetry.lock
pubspec.lock
requirements.txt.lock
Pipfile.lock

# Build system specific
Makefile.local
CMakeCache.txt
CMakeFiles/
cmake_install.cmake
Makefile
*.mk
*.cmake

# Documentation build
docs/build/
docs/_build/
site/

# Static analysis
.sonar/
.checkstyle/
.pmd/
.findbugs/

# Monitoring and logging
.jmx/
*.jfr
*.jfr.tsv

# Security related
*.p12
*.jks
*.keystore
*.truststore
*.crt
*.pem
*.key
*.csr
*.crl
*.p7b
*.p7c
*.p7s
*.p7m
*.asc
*.gpg
*.sig
*.signature

# Virtualization
.vagrant/
.Vagrantfile

# WSL specific
*.wslconfig

# Windows specific
*.lnk
*.url
*.appref-ms

# Mac specific
.AppleDouble
.LSOverride

# Linux specific
*nfs*
*~

# Temporary upload files
uploads/
uploads_*/